version=54;
class EditorData
{
	moveGridStep=1;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=513;
	mods[]=
	{
		"3denEnhanced"
	};
	class ItemIDProvider
	{
		nextID=56;
	};
	class Camera
	{
		pos[]={504.44009,31.203157,1538.1805};
		dir[]={0.63688457,-0.33121088,-0.69618827};
		up[]={0.22356167,0.94355655,-0.24437849};
		aside[]={-0.73783433,3.1315722e-008,-0.67498332};
	};
};
binarizationWanted=0;
sourceName="islandDivers";
addons[]=
{
	"CUP_CAStructures_Nav_pier",
	"A3_Structures_F_Naval_Piers",
	"A3_Characters_F",
	"A3_Structures_F_Civ_Constructions",
	"A3_Boat_F_Boat_Transport_01"
};
class AddonsMetaData
{
	class List
	{
		items=4;
		class Item0
		{
			className="CUP_CAStructures_Nav_pier";
			name="CUP_CAStructures_Nav_pier";
		};
		class Item1
		{
			className="A3_Structures_F";
			name="Arma 3 - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item2
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item3
		{
			className="A3_Boat_F";
			name="Arma 3 Alpha - Boats and Submersibles";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
	};
};
class DynamicSimulation
{
	class EnableRadiuses
	{
		Prop=250;
		EmptyVehicle=400;
		Vehicle=500;
		Group=750;
	};
};
randomSeed=15203030;
class ScenarioData
{
	author="jim_0316";
	overviewText="Unleash your diving prowess and embark on a high-stakes mission. Clear the island, rescue civilians, and dismantle enemy communication. The fate of lives and the island's future rests in your hands. Dive in, conquer, and secure salvation.";
	overViewPicture="armaDiversMission\Pictures\loadingScreen.jpg";
	wreckRemovalMaxTime=3600;
};
class CustomAttributes
{
	class Category0
	{
		name="Scenario";
		class Attribute0
		{
			property="ENH_SPR";
			expression="if (!is3DEN && _value # 0 > 0 && !isMultiplayer) then      {        ENH_SPR_Ruleset = _value param [0, 0];        ENH_SPR_Delay = _value param [1, 20];        ENH_SPR_CanDie = _value param [2, false];        ENH_SPR_RestoreLoadout = _value param [3, false];        ENH_SPR_OnRespawnCode = compile (_value param [4, '']);        ENH_SPR_Positions =        [          allMapMarkers select {'respawn_east' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_west' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_guerilla' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_civilian' in toLower _x} apply {getMarkerPos _x}        ];        {          _x setVariable ['ENH_SPR_OriginalSide', side group _x];          _x setVariable ['ENH_SPR_OriginalLoadout', getUnitLoadout _x];          _x addEventHandler ['handleDamage',          {            params ['_unit', '', '_damage', '', '', '_index'];            if (!alive _unit || lifeState _unit isEqualTo 'INCAPACITATED') exitWith {0};            if (_unit getVariable ['ENH_SPR_Tickets', 0] == 0) then            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              _damage;            };            if (ENH_SPR_CanDie && _index in [1, 2] && _damage >= 1) exitWith            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              1;            };            if (_index < 8 && (_damage min 0.95) == 0.95) then            {              setAccTime 1;              _unit allowDamage false;              _unit setCaptive true;              _unit setUnconscious true;              _unit setVariable ['ENH_SPR_Tickets', (_unit getVariable ['ENH_SPR_Tickets', 0]) - 1];              if (isPlayer _unit) then {enableTeamSwitch false} else {removeSwitchableUnit _unit};              moveOut _unit;              _unit spawn ENH_fnc_SPR_respawnTimer;            };            _damage min 0.95;          }];        } forEach (allUnits select {_x getVariable ['ENH_SPR_Tickets', 0] > 0});                ENH_fnc_SPR_respawn =        {          scriptName 'ENH_Attribute_SPR_Respawn';          params ['_unit'];          if (isPlayer _unit) then {enableTeamSwitch true} else {addSwitchableUnit _unit};          if (ENH_SPR_RestoreLoadout) then {_unit setUnitLoadout (_unit getVariable 'ENH_SPR_OriginalLoadout')};          private _sideID = (_unit getVariable 'ENH_SPR_OriginalSide') call BIS_fnc_sideID;          private _positions = ENH_SPR_Positions select _sideID;          if (_positions isNotEqualTo []) then          {            switch (ENH_SPR_Ruleset) do            {              case 3:              {                _unit setPos (([_positions, [], {_unit distance _x}, 'ASCEND'] call BIS_fnc_sortBy) select 0);              };              case 2:              {                _unit setPos selectRandom _positions;              };            };          };          _unit setUnconscious false;          _unit allowDamage true;          _unit setDamage 0;          _unit switchMove '';          _unit call ENH_SPR_OnRespawnCode;          _unit spawn          {            sleep 8;            _this setCaptive false;          };        };                ENH_fnc_SPR_respawnTimer =        {          scriptName 'ENH_Attribute_SPR_RespawnTimer';          params ['_unit'];          private _respawnTime = time + ENH_SPR_Delay;          if (isPlayer _unit) then          {            private _ctrlRespawnTimer = (call BIS_fnc_displayMission) ctrlCreate ['RscStructuredText',-1];            _ctrlRespawnTimer ctrlSetPosition [0.25, 0, 0.5, 0.06];            _ctrlRespawnTimer ctrlSetBackgroundColor [0, 0, 0, 0.1];            _ctrlRespawnTimer ctrlCommit 0;            ENH_SPR_OriginalVolume = [soundVolume, musicVolume, radioVolume, speechVolume, environmentVolume];            0 cutText ['', 'BLACK OUT', 0.3];            0.3 fadeSound 0;            0.3 fadeMusic 0;            0.3 fadeRadio 0;            0.3 fadeSpeech 0;            0.3 fadeEnvironment 0;            showChat false;            while {time < _respawnTime} do            {              _ctrlRespawnTimer ctrlSetStructuredText parseText format ['<t size=''1.25'' color=''#218a36'' align=''center''>%1</t>', [(_respawnTime - time), 'HH:MM'] call BIS_fnc_timeToString];              sleep 0.1;            };            ctrlDelete _ctrlRespawnTimer;            0 cutText ['', 'BLACK IN', 8];            8 fadeSound (ENH_SPR_OriginalVolume # 0);            8 fadeMusic (ENH_SPR_OriginalVolume # 1);            8 fadeRadio (ENH_SPR_OriginalVolume # 2);            8 fadeSpeech (ENH_SPR_OriginalVolume # 3);            8 fadeEnvironment (ENH_SPR_OriginalVolume # 4);            showChat true;            [              ['Respawned'],              [format ['GRID: %1', mapGridPosition _unit]],              [format ['Tickets left: %1', _unit getVariable 'ENH_SPR_Tickets']]            ] spawn BIS_fnc_EXP_camp_SITREP;          }          else          {            if ((side player getFriend (_unit getVariable 'ENH_SPR_OriginalSide')) >= 0.6) then            {              [                str _unit, 'onEachFrame',                {                  drawIcon3D ['\a3\Modules_f\data\portraitRespawn_ca.paa', [0.13, 0.54, 0.21, 0.8], ASLToAGL ((_this # 0) modelToWorldVisualWorld [0, 0, 1]), 1, 1, 0, str round ((_this # 1) - time), 2];                },                [_unit, _respawnTime]              ] call BIS_fnc_addStackedEventHandler;            };            sleep ENH_SPR_Delay;          };          [str _unit, 'onEachFrame'] call BIS_fnc_removeStackedEventHandler;          _unit call ENH_fnc_SPR_respawn;        };      }";
			class Value
			{
				class data
				{
					singleType="ARRAY";
					class value
					{
						items=5;
						class Item0
						{
							class data
							{
								singleType="SCALAR";
								value=0;
							};
						};
						class Item1
						{
							class data
							{
								singleType="SCALAR";
								value=20;
							};
						};
						class Item2
						{
							class data
							{
								singleType="BOOL";
								value=0;
							};
						};
						class Item3
						{
							class data
							{
								singleType="BOOL";
								value=0;
							};
						};
						class Item4
						{
							class data
							{
								singleType="STRING";
								value="";
							};
						};
					};
				};
			};
		};
		nAttributes=1;
	};
};
class Mission
{
	assetType="Free";
	class Intel
	{
		briefingName="Operation Scotland Rescue";
		timeOfChanges=1800.0002;
		startFog=0.1;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0.60000002;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		year=2023;
		month=8;
		day=7;
		hour=13;
		minute=-23;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
	};
	class Entities
	{
		items=7;
		class Item0
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={90.761276,-18.397205,1964.403};
				angles[]={0,5.9775195,0};
			};
			side="Empty";
			class Attributes
			{
			};
			id=36;
			type="Land_nav_pier_m_2";
			atlOffset=9.8067856;
		};
		class Item1
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={68.634521,-18.424389,1957.42};
				angles[]={0,5.9775195,0};
			};
			side="Empty";
			class Attributes
			{
			};
			id=38;
			type="land_nav_pier_m_end";
			atlOffset=9.7796021;
		};
		class Item2
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={70.588005,2.3976295,1963.7667};
				angles[]={0,4.40275,-0};
			};
			side="Empty";
			flags=1;
			class Attributes
			{
			};
			id=40;
			type="Land_PierLadder_F";
			atlOffset=13.099169;
		};
		class Item3
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={107.20338,5.0442247,1969.8356};
						angles[]={0,4.3892527,-0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						skill=1;
						rank="COLONEL";
						isPlayer=1;
					};
					id=42;
					type="B_diver_TL_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="allowDamage";
							expression="_this allowdamage _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						class Attribute1
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									singleType="STRING";
									value="Male08ENG";
								};
							};
						};
						class Attribute2
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									singleType="SCALAR";
									value=1;
								};
							};
						};
						class Attribute3
						{
							property="enableStamina";
							expression="_this enablestamina _value;";
							class Value
							{
								class data
								{
									singleType="BOOL";
									value=0;
								};
							};
						};
						nAttributes=4;
					};
				};
			};
			class Attributes
			{
			};
			id=41;
		};
		class Item4
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={58.061394,2.4208109,1962.9304};
				angles[]={0,4.4175549,0};
			};
			side="Empty";
			flags=1;
			class Attributes
			{
			};
			id=10;
			type="Land_Pier_addon";
			atlOffset=9.9274607;
		};
		class Item5
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={67.837296,5.7111301,1952.9359};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=49;
			type="Land_IronPipes_F";
		};
		class Item6
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={61.766136,1.2435327,1968.8186};
				angles[]={0,0.31587523,0};
			};
			side="Empty";
			class Attributes
			{
			};
			id=55;
			type="B_Boat_Transport_01_F";
			atlOffset=10.75;
		};
	};
};
